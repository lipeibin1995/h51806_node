//引入"UserDao"依赖
const UserDao=require("../../dao/user/user_dao.js");

//用户"业务逻辑层"处理
const UserService={
	//登录
	login(req,res,next){
		//POST请求方式获取数据
		const {username,password}=req.body;
		//GET方式获取数据是req.query
		//数据访问：根据用户名查找用户信息
		UserDao.find({username})
					.then((data)=>{
						//判断密码
						if(data.length===1){ //存在与查找用户名相关的对象
							//比较密码
							if(password===data[0].password){//密码一致
								//用户登录成功，在session中保存登录成功的用户信息
								req.session.loginUser=username;
								res.json({
									res_code:1,
									res_error:"",
									res_body:{
										status:1,
										message:"success",
										data:{
											username:data[0].username
										}
									}
								})
							}else{//密码不一致
								res.json({
									res_code:1,
									res_error:"",
									res_body:{
										status:0,
										message:"密码错误",
										data:{}
									}
								});
							}
							res.json();
						}else{//不存在与查找用户名相关的对象
							res.json({
								res_code:1,
								res_error:"",
								res_body:{
									status:0,
									message:"用户名不存在",
									data:{}
								}
							})
						}
					})
					.catch((err)=>{
						res.json({
							res_code:0,
							res_error:err,
							res_body:{}
						});
					});
	},
	//注册
	register(req,res,next){
		//从请求中获取注册用户的用户名、密码、email
		//从GET方式获取数据
		//const {username,password,email}=req.query;
		//POST请求方式获取数据
		const {username,password,email}=req.body;
		//用户密码加密处理
		//TODO.........
		//将用户注册信息提交到数据访问层处理
		UserDao.save({username,password,email})
		                  .then((data)=>{
		                  	//注册成功即登录成功，省一次登录操作
		                  	req.session.loginUser=username;
		                  	res.json({res_code:1,res_error:"",res_body:{status:1,message:"success",data:{username:data.username}}});
		                  })
		                  .catch((err)=>{
		                  	console.log(err);
		                  	res.json({res_code:1,res_error:"",res_body:{status:0,message:"failed:"+err,data:{}}});
		                  })
	},
	//检验用户是否存在
	check(req,res,next){
		
	},
	//注销
	loginout(req,res,next){
		req.session.loginUser=null;
		res.json({
			res_code:1,
			res_error:"",
			res_body:{
				status:1
			}
		})
	}
};

module.exports=UserService;